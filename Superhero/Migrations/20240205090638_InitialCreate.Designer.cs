// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Superheroes.DataAccess;

namespace Superheroes.Migrations
{
    [DbContext(typeof(SuperheroDbContext))]
    [Migration("20240205090638_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Superheroes.Models.Appearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EyeColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .HasColumnType("TEXT");

                    b.Property<string>("Race")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Appearance");
                });

            modelBuilder.Entity("Superheroes.Models.Biography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Alignment")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlterEgos")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstAppearance")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Biography");
                });

            modelBuilder.Entity("Superheroes.Models.Connections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupAffiliation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Relatives")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Superheroes.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Superheroes.Models.Powerstats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Combat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Durability")
                        .HasColumnType("TEXT");

                    b.Property<string>("Intelligence")
                        .HasColumnType("TEXT");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<string>("Speed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Strength")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Powerstats");
                });

            modelBuilder.Entity("Superheroes.Models.Superhero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AppearanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BiographyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConnectionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PowerstatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppearanceId");

                    b.HasIndex("BiographyId");

                    b.HasIndex("ConnectionsId");

                    b.HasIndex("ImageId");

                    b.HasIndex("PowerstatsId");

                    b.HasIndex("WorkId");

                    b.ToTable("Superheroes");
                });

            modelBuilder.Entity("Superheroes.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupation")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Work");
                });

            modelBuilder.Entity("Superheroes.Models.Superhero", b =>
                {
                    b.HasOne("Superheroes.Models.Appearance", "Appearance")
                        .WithMany()
                        .HasForeignKey("AppearanceId");

                    b.HasOne("Superheroes.Models.Biography", "Biography")
                        .WithMany()
                        .HasForeignKey("BiographyId");

                    b.HasOne("Superheroes.Models.Connections", "Connections")
                        .WithMany()
                        .HasForeignKey("ConnectionsId");

                    b.HasOne("Superheroes.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Superheroes.Models.Powerstats", "Powerstats")
                        .WithMany()
                        .HasForeignKey("PowerstatsId");

                    b.HasOne("Superheroes.Models.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId");
                });
#pragma warning restore 612, 618
        }
    }
}
